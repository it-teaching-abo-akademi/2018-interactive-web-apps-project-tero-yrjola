{"version":3,"sources":["Portfolio/PortfolioTable.js","Portfolio/AddStockDialog.js","Portfolio/PortfolioHeader.js","Portfolio/PortfolioFooter.js","Portfolio/Portfolio.js","Base.js","serviceWorker.js","index.js"],"names":["PortfolioTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","stocks","_this$props","classes","checkMarkClick","react_default","a","createElement","Table_default","width","TableHead_default","TableRow","className","tableHead","TableCell_default","tableCell","TableBody_default","tableBody","map","row","tableRow","key","name","Checkbox_default","checkbox","onChange","value","quantity","total","Component","AddStockDialog","nameChange","event","setState","stockName","target","amountChange","stockAmount","clearState","prevProps","isOpen","closeDialog","submitStock","_this$state","Dialog_default","open","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","DialogActions_default","Button_default","onClick","color","PortfolioHeader","eurosSelected","changeCurrency","Paper_default","portfolioHeader","Grid_default","container","item","xs","Typography_default","noWrap","variant","PortfolioFooter","totalValue","addStock","noCheckedStocks","deleteCheckedStock","portfolioFooter","justify","disabled","debugRows","Portfolio","checkedStock","deleteStockButtonEnabled","addStockDialogOpen","rows","bind","assertThisInitialized","getTotalValue","stock","reduce","b","selectedCurrency","currentTarget","indexOf","filter","s","push","_this2","newRows","includes","amount","alert","sort","localeCompare","_this3","_this$state2","portfolio","style","textAlign","height","IconButton_default","deleteButton","aria-label","Delete_default","Card_default","portfolioBase","Portfolio_PortfolioHeader","tableWrapper","Portfolio_PortfolioTable","Portfolio_PortfolioFooter","length","Portfolio_AddStockDialog","portfolioName","withStyles","theme","padding","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","marginBottom","overflowY","backgroundColor","position","top","Base","src_Portfolio_Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_Base","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1295692b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/es/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Table from \"@material-ui/core/Table\";\r\n\r\nclass PortfolioTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stocks: props.stocks,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, stocks, checkMarkClick } = this.props;\r\n        return (\r\n            <Table>\r\n                <colgroup>\r\n                    <col width=\"10%\"/>\r\n                    <col width=\"15%\"/>\r\n                    <col width=\"25%\"/>\r\n                    <col width=\"25%\"/>\r\n                    <col width=\"25%\"/>\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow className={classes.tableHead}>\r\n                        <TableCell className={classes.tableCell}>Select</TableCell>\r\n                        <TableCell className={classes.tableCell}>Name</TableCell>\r\n                        <TableCell className={classes.tableCell}>Unit value</TableCell>\r\n                        <TableCell className={classes.tableCell}>Quantity</TableCell>\r\n                        <TableCell className={classes.tableCell}>Total value</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {stocks.map(row => {\r\n                        return (\r\n                            <TableRow className={classes.tableRow} key={row.name}>\r\n                                <TableCell className={classes.tableCell}>\r\n                                    <Checkbox className={classes.checkbox} onChange={() => checkMarkClick(row.name)}/>\r\n                                </TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.name}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.value}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.quantity}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.total}</TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortfolioTable;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nclass AddStockDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stockName: \"\",\r\n            stockAmount: \"\",\r\n        }\r\n    }\r\n\r\n\r\n    //Whenever the dialog closes, clear the state\r\n    componentDidUpdate(prevProps) {\r\n        const {isOpen} = this.props;\r\n        if (isOpen === false && prevProps.isOpen === true) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    nameChange = (event) => {\r\n        this.setState({stockName: event.target.value})\r\n    };\r\n\r\n    amountChange = (event) => {\r\n        this.setState({stockAmount: event.target.value})\r\n    };\r\n\r\n    clearState = () => {\r\n        this.setState({stockName: \"\", stockAmount: \"\"})\r\n    };\r\n\r\n    render() {\r\n        const {name, isOpen, closeDialog, submitStock} = this.props;\r\n        const {stockName, stockAmount} = this.state;\r\n        return (\r\n            <Dialog\r\n                open={isOpen}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding stock to portfolio: {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter your new stock's name and quantity below:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"Stock name\"\r\n                        value={stockName}\r\n                        onChange={this.nameChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Amount of stock\"\r\n                        type=\"number\"\r\n                        value={stockAmount}\r\n                        onChange={this.amountChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => submitStock(stockName, stockAmount)} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStockDialog;","import React, {Component} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass PortfolioHeader extends Component {\r\n    render() {\r\n        const {classes, name, eurosSelected, changeCurrency} = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.portfolioHeader}>\r\n                <Grid container>\r\n                    <Grid item xs={7}>\r\n                        <Typography noWrap variant=\"h6\">{name}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button\r\n                            onClick={changeCurrency}\r\n                            variant={eurosSelected ? \"contained\" : \"outlined\"}\r\n                            value=\"euro\"\r\n                            color=\"primary\">\r\n                            €\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button\r\n                            onClick={changeCurrency}\r\n                            variant={eurosSelected ? \"outlined\" : \"contained\"}\r\n                            value=\"dollar\"\r\n                            color=\"primary\">\r\n\r\n                            $\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nPortfolioHeader.propTypes = {};\r\n\r\nexport default PortfolioHeader;","import React, {Component} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass PortfolioFooter extends Component {\r\n    render() {\r\n        const {classes, totalValue, addStock, noCheckedStocks, deleteCheckedStock} = this.props;\r\n        return (\r\n            <Paper className={classes.portfolioFooter}>\r\n                <Typography variant=\"caption\">Total value of portfolio: {totalValue}</Typography>\r\n                <Grid container justify={\"space-evenly\"}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={addStock}>\r\n                            add stock\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\">perf. Graph</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            disabled={noCheckedStocks}\r\n                            variant=\"outlined\" color=\"secondary\"\r\n                            onClick={deleteCheckedStock}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortfolioFooter;","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PortfolioTable from \"./PortfolioTable\";\r\nimport AddStockDialog from \"./AddStockDialog\";\r\nimport PortfolioHeader from \"./PortfolioHeader\";\r\nimport PortfolioFooter from \"./PortfolioFooter\";\r\n\r\nconst styles = theme => ({\r\n    deleteButton: {\r\n        padding: 0,\r\n    },\r\n    portfolio: {\r\n        width: \"400px\",\r\n        height: \"325px\",    // Because the div containing the delete button is 25px and the portfolioBase is 300px\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    portfolioBase: {\r\n        height: \"300px\",\r\n    },\r\n    portfolioHeader: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        marginBottom: \"3px\",\r\n    },\r\n    portfolioFooter: {\r\n        padding: theme.spacing.unit,\r\n    },\r\n    tableWrapper: {\r\n        height: \"175px\",\r\n        overflowY: \"scroll\",\r\n    },\r\n    tableCell: {\r\n        width: \"20px\",\r\n        padding: \"2px\",\r\n        textAlign: \"center\",\r\n    },\r\n    tableHead: {\r\n        backgroundColor: \"#fff\",\r\n        position: \"sticky\",\r\n        top: 0\r\n    },\r\n    tableRow: {\r\n        height: \"50px\",\r\n    },\r\n    checkbox: {\r\n        padding: \"8px\",\r\n    }\r\n});\r\n\r\nconst debugRows = [\r\n    {name: 'Eclair', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair2', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair3', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair4', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair5', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair6', value: 262, quantity: 16.0, total: 24},\r\n];\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            eurosSelected: true,\r\n            totalValue: \"\",\r\n            checkedStock: [],\r\n            deleteStockButtonEnabled: false,\r\n            addStockDialogOpen: false,\r\n            rows: debugRows,\r\n        };\r\n\r\n        this.checkMarkClick = this.checkMarkClick.bind(this);\r\n        this.deleteCheckedStock = this.deleteCheckedStock.bind(this);\r\n        this.addStock = this.addStock.bind(this);\r\n        this.getTotalValue = this.getTotalValue.bind(this);\r\n        this.changeCurrency = this.changeCurrency.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({totalValue: this.getTotalValue()})\r\n    }\r\n\r\n    getTotalValue() {\r\n        return this.state.rows.map(stock => stock.total).reduce((a, b) => a + b);\r\n    }\r\n\r\n    changeCurrency(event) {\r\n        const selectedCurrency = event.currentTarget.value;\r\n        if (selectedCurrency === \"euro\")\r\n            this.setState({eurosSelected: true});\r\n        else if (selectedCurrency === \"dollar\") {\r\n            this.setState({eurosSelected: false});\r\n        }\r\n    }\r\n\r\n    checkMarkClick(key) {\r\n        const {checkedStock} = this.state;\r\n        //If the checked stock already contains the key, then delete it. Otherwise add it to the state.\r\n        if (checkedStock.indexOf(key) > -1) this.setState({checkedStock: checkedStock.filter(s => s !== key)});\r\n        else {\r\n            checkedStock.push(key);\r\n            this.setState({checkedStock: checkedStock})\r\n        }\r\n    }\r\n\r\n    deleteCheckedStock() {\r\n        const {checkedStock, rows} = this.state;\r\n        //Remove all stocks that are found in the checkedStock-list (e.g. remove all the selected rows)\r\n        const newRows = rows.filter((stock) => !checkedStock.includes(stock.name));\r\n        //Empty selected (since they are deleted) and callback the new total calculation since state-setting is async\r\n        this.setState({rows: newRows, checkedStock: []},\r\n            () => this.setState({totalValue: this.getTotalValue()}))\r\n    }\r\n\r\n    addStock(name, amount) {\r\n        const {rows} = this.state;\r\n        if (!rows.map(row => row.name).includes(name)) {\r\n            rows.push({name: name, value: 123, quantity: amount, total: amount * 123});\r\n            //Sort the rows by name\r\n            rows.sort((a,b) => a.name.localeCompare(b.name) || a.name.localeCompare(b.name));\r\n            this.setState({addStockDialogOpen: false, totalValue: this.getTotalValue()})\r\n        } else {\r\n            alert(\"The stock \" + name + \" already exists!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes, name} = this.props;\r\n        const {addStockDialogOpen, eurosSelected, totalValue} = this.state;\r\n        return (\r\n            <div className={classes.portfolio}>\r\n                <div style={{textAlign: \"right\", height: \"25px\"}}>\r\n                    <IconButton className={classes.deleteButton} aria-label=\"Delete\">\r\n                        <DeleteIcon color=\"secondary\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <Card className={classes.portfolioBase}>\r\n                    <PortfolioHeader\r\n                        classes={classes}\r\n                        name={name}\r\n                        eurosSelected={eurosSelected}\r\n                        changeCurrency={this.changeCurrency}\r\n                    />\r\n                    <div className={classes.tableWrapper}>\r\n                        <PortfolioTable\r\n                            classes={classes}\r\n                            stocks={this.state.rows}\r\n                            checkMarkClick={this.checkMarkClick}\r\n                        />\r\n                    </div>\r\n                    <PortfolioFooter\r\n                        classes={classes}\r\n                        totalValue={totalValue}\r\n                        noCheckedStocks={!this.state.checkedStock.length > 0}\r\n                        deleteCheckedStock={this.deleteCheckedStock}\r\n                        addStock={() => this.setState({addStockDialogOpen: true})}\r\n                    />\r\n                </Card>\r\n                <AddStockDialog\r\n                    portfolioName={name}\r\n                    isOpen={addStockDialogOpen}\r\n                    closeDialog={() => this.setState({addStockDialogOpen: false})}\r\n                    submitStock={this.addStock}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Portfolio);","import React, {Component} from 'react';\nimport './App.css';\nimport Portfolio from \"./Portfolio/Portfolio\";\n\nclass Base extends Component {\n    render() {\n        return (\n            <div className=\"Base\">\n                <Portfolio name={\"Testiportfolio\"}/>\n            </div>\n        );\n    }\n}\n\nexport default Base;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Base is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Base from './Base';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Base />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}