{"version":3,"sources":["Portfolio/PortfolioTable.js","Portfolio/AddStockDialog.js","Portfolio/PortfolioHeader.js","Portfolio/PortfolioFooter.js","Portfolio/PostfolioStyles.js","Alphavantage.js","Portfolio/Portfolio.js","Base.js","serviceWorker.js","index.js"],"names":["PortfolioTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","stocks","_this$props","classes","checkMarkClick","currencySymbol","react_default","a","createElement","Table_default","width","TableHead_default","TableRow","className","tableHead","TableCell_default","tableCell","TableBody_default","tableBody","map","row","tableRow","key","name","Checkbox_default","checkbox","onChange","value","toFixed","quantity","total","Component","AddStockDialog","nameChange","event","setState","stockName","target","amountChange","stockAmount","clearState","prevProps","isOpen","closeDialog","submitStock","_this$state","Dialog_default","open","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","DialogActions_default","Button_default","onClick","color","PortfolioHeader","eurosSelected","changeCurrency","Paper_default","portfolioHeader","Grid_default","container","item","xs","Typography_default","noWrap","variant","PortfolioFooter","totalValue","addStock","noCheckedStocks","deleteCheckedStock","portfolioFooter","justify","disabled","styles","theme","deleteButton","padding","portfolio","objectSpread","height","mixins","gutters","paddingTop","spacing","unit","paddingBottom","portfolioBase","marginBottom","tableWrapper","overflowY","textAlign","backgroundColor","position","top","BASE_URL","API_KEY","getUSDToEur","query","Promise","resolve","reject","req","XMLHttpRequest","url","onload","status","response","Error","statusText","onerror","send","sendGetRequest","debugRows","Portfolio","checkedStock","deleteStockButtonEnabled","addStockDialogOpen","rows","usdToEurRatio","bind","assertThisInitialized","getTotalValue","reCalculateValues","_this2","then","exchangeRate","JSON","parse","alert","stock","reduce","b","_this3","selectedCurrency","currentTarget","multiplier","forEach","indexOf","filter","s","push","_this4","_this$state2","newRows","includes","amount","newRow","sort","localeCompare","_this5","_this$state3","style","IconButton_default","aria-label","Delete_default","Card_default","Portfolio_PortfolioHeader","Portfolio_PortfolioTable","Portfolio_PortfolioFooter","length","Portfolio_AddStockDialog","portfolioName","withStyles","Base","src_Portfolio_Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_Base","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.138b98f4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/es/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Table from \"@material-ui/core/Table\";\r\n\r\nclass PortfolioTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stocks: props.stocks,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, stocks, checkMarkClick, currencySymbol } = this.props;\r\n        return (\r\n            <Table>\r\n                <colgroup>\r\n                    <col width=\"10%\"/>\r\n                    <col width=\"15%\"/>\r\n                    <col width=\"25%\"/>\r\n                    <col width=\"25%\"/>\r\n                    <col width=\"25%\"/>\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow className={classes.tableHead}>\r\n                        <TableCell className={classes.tableCell}>Select</TableCell>\r\n                        <TableCell className={classes.tableCell}>Name</TableCell>\r\n                        <TableCell className={classes.tableCell}>Unit value</TableCell>\r\n                        <TableCell className={classes.tableCell}>Quantity</TableCell>\r\n                        <TableCell className={classes.tableCell}>Total value</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {stocks.map(row => {\r\n                        return (\r\n                            <TableRow className={classes.tableRow} key={row.name}>\r\n                                <TableCell className={classes.tableCell}>\r\n                                    <Checkbox className={classes.checkbox} onChange={() => checkMarkClick(row.name)}/>\r\n                                </TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.name}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.value.toFixed(2)}{currencySymbol}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.quantity}</TableCell>\r\n                                <TableCell className={classes.tableCell}>{row.total.toFixed(2)}{currencySymbol}</TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortfolioTable;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nclass AddStockDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stockName: \"\",\r\n            stockAmount: \"\",\r\n        }\r\n    }\r\n\r\n\r\n    //Whenever the dialog closes, clear the state\r\n    componentDidUpdate(prevProps) {\r\n        const {isOpen} = this.props;\r\n        if (isOpen === false && prevProps.isOpen === true) {\r\n            this.clearState();\r\n        }\r\n    }\r\n\r\n    nameChange = (event) => {\r\n        this.setState({stockName: event.target.value})\r\n    };\r\n\r\n    amountChange = (event) => {\r\n        this.setState({stockAmount: event.target.value})\r\n    };\r\n\r\n    clearState = () => {\r\n        this.setState({stockName: \"\", stockAmount: \"\"})\r\n    };\r\n\r\n    render() {\r\n        const {name, isOpen, closeDialog, submitStock} = this.props;\r\n        const {stockName, stockAmount} = this.state;\r\n        return (\r\n            <Dialog\r\n                open={isOpen}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding stock to portfolio: {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter your new stock's name and quantity below:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"Stock name\"\r\n                        value={stockName}\r\n                        onChange={this.nameChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        label=\"Amount of stock\"\r\n                        type=\"number\"\r\n                        value={stockAmount}\r\n                        onChange={this.amountChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => submitStock(stockName, stockAmount)} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStockDialog;","import React, {Component} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass PortfolioHeader extends Component {\r\n    render() {\r\n        const {classes, name, eurosSelected, changeCurrency} = this.props;\r\n\r\n        return (\r\n            <Paper className={classes.portfolioHeader}>\r\n                <Grid container>\r\n                    <Grid item xs={7}>\r\n                        <Typography noWrap variant=\"h6\">{name}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button\r\n                            onClick={changeCurrency}\r\n                            variant={eurosSelected ? \"contained\" : \"outlined\"}\r\n                            value=\"euro\"\r\n                            color=\"primary\">\r\n                            €\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Button\r\n                            onClick={changeCurrency}\r\n                            variant={eurosSelected ? \"outlined\" : \"contained\"}\r\n                            value=\"dollar\"\r\n                            color=\"primary\">\r\n\r\n                            $\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nPortfolioHeader.propTypes = {};\r\n\r\nexport default PortfolioHeader;","import React, {Component} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass PortfolioFooter extends Component {\r\n    render() {\r\n        const {\r\n            classes,\r\n            totalValue,\r\n            addStock,\r\n            noCheckedStocks,\r\n            deleteCheckedStock,\r\n            currencySymbol,\r\n        } = this.props;\r\n        return (\r\n            <Paper className={classes.portfolioFooter}>\r\n                <Typography variant=\"caption\">Total value of portfolio: {totalValue.toFixed(2)}{currencySymbol}</Typography>\r\n                <Grid container justify={\"space-evenly\"}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={addStock}>\r\n                            add stock\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\">perf. Graph</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            disabled={noCheckedStocks}\r\n                            variant=\"outlined\" color=\"secondary\"\r\n                            onClick={deleteCheckedStock}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortfolioFooter;","const styles = theme => ({\r\n    deleteButton: {\r\n        padding: 0,\r\n    },\r\n    portfolio: {\r\n        width: \"400px\",\r\n        height: \"325px\",    // Because the div containing the delete button is 25px and the portfolioBase is 300px\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit * 2,\r\n        paddingBottom: theme.spacing.unit * 2,\r\n    },\r\n    portfolioBase: {\r\n        height: \"300px\",\r\n    },\r\n    portfolioHeader: {\r\n        ...theme.mixins.gutters(),\r\n        paddingTop: theme.spacing.unit,\r\n        paddingBottom: theme.spacing.unit,\r\n        marginBottom: \"3px\",\r\n    },\r\n    portfolioFooter: {\r\n        padding: theme.spacing.unit,\r\n    },\r\n    tableWrapper: {\r\n        height: \"175px\",\r\n        overflowY: \"scroll\",\r\n    },\r\n    tableCell: {\r\n        width: \"20px\",\r\n        padding: \"2px\",\r\n        textAlign: \"center\",\r\n    },\r\n    tableHead: {\r\n        backgroundColor: \"#fff\",\r\n        position: \"sticky\",\r\n        top: 0\r\n    },\r\n    tableRow: {\r\n        height: \"50px\",\r\n    },\r\n    checkbox: {\r\n        padding: \"8px\",\r\n    }\r\n});\r\n\r\nexport default styles;","const BASE_URL = \"https://www.alphavantage.co/query?\";\r\nconst API_KEY = \"H0LW74TMCBD0BJ0F\";\r\n\r\nexport const getUSDToEur = () => {\r\n    const query = \"function=CURRENCY_EXCHANGE_RATE&&from_currency=USD&to_currency=EUR\";\r\n    return(sendGetRequest(query));\r\n};\r\n\r\nfunction sendGetRequest(query) {\r\n    return new Promise((resolve, reject) => {\r\n        const req = new XMLHttpRequest();\r\n        const url = BASE_URL + query + \"&apikey=\" + API_KEY;\r\n        req.open(\"GET\", url);\r\n        req.onload = function(){\r\n            if (req.status === 200) resolve(req.response);\r\n            else reject(Error(req.statusText));\r\n        };\r\n        req.onerror = function () {\r\n            reject(Error(\"Network Error\"));\r\n        };\r\n        req.send();\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PortfolioTable from \"./PortfolioTable\";\r\nimport AddStockDialog from \"./AddStockDialog\";\r\nimport PortfolioHeader from \"./PortfolioHeader\";\r\nimport PortfolioFooter from \"./PortfolioFooter\";\r\nimport styles from \"./PostfolioStyles\";\r\nimport {getUSDToEur} from \"../Alphavantage\";\r\n\r\nconst debugRows = [\r\n    {name: 'Eclair', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair2', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair3', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair4', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair5', value: 262, quantity: 16.0, total: 24},\r\n    {name: 'Eclair6', value: 262, quantity: 16.0, total: 24},\r\n];\r\n\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            eurosSelected: true,\r\n            totalValue: 0,\r\n            checkedStock: [],\r\n            deleteStockButtonEnabled: false,\r\n            addStockDialogOpen: false,\r\n            rows: debugRows,\r\n            usdToEurRatio: 0,\r\n        };\r\n\r\n        this.checkMarkClick = this.checkMarkClick.bind(this);\r\n        this.deleteCheckedStock = this.deleteCheckedStock.bind(this);\r\n        this.addStock = this.addStock.bind(this);\r\n        this.getTotalValue = this.getTotalValue.bind(this);\r\n        this.changeCurrency = this.changeCurrency.bind(this);\r\n        this.reCalculateValues = this.reCalculateValues.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        getUSDToEur().then((response) =>{\r\n            const exchangeRate = JSON.parse(response)[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"];\r\n            this.setState({usdToEurRatio: exchangeRate}, ()=> {\r\n                this.setState({totalValue: this.getTotalValue()});\r\n                this.reCalculateValues();\r\n            });\r\n        }, (() => alert(\"Error connecting to Alphavantage!\")));\r\n    }\r\n\r\n    getTotalValue() {\r\n        return this.state.rows.map(stock => stock.total).reduce((a, b) => a + b);\r\n    }\r\n\r\n    changeCurrency(event) {\r\n        const {eurosSelected} = this.state;\r\n        const selectedCurrency = event.currentTarget.value;\r\n        if (selectedCurrency === \"euro\" && !eurosSelected)\r\n            this.setState({eurosSelected: true}, () => {\r\n                this.reCalculateValues();\r\n            });\r\n        else if (selectedCurrency === \"dollar\" && eurosSelected) {\r\n            this.setState({eurosSelected: false}, () => {\r\n                this.reCalculateValues();\r\n            });\r\n        }\r\n    }\r\n\r\n    reCalculateValues(){\r\n        const {rows, eurosSelected, usdToEurRatio} = this.state;\r\n        const multiplier = eurosSelected ? usdToEurRatio : 1.0/usdToEurRatio;\r\n        rows.forEach(row => {\r\n            row.value = row.value*multiplier;\r\n            row.total = row.value * row.quantity;\r\n        });\r\n        this.setState({totalValue: this.getTotalValue()});\r\n    }\r\n\r\n    checkMarkClick(key) {\r\n        const {checkedStock} = this.state;\r\n        //If the checked stock already contains the key, then delete it. Otherwise add it to the state.\r\n        if (checkedStock.indexOf(key) > -1) this.setState({checkedStock: checkedStock.filter(s => s !== key)});\r\n        else {\r\n            checkedStock.push(key);\r\n            this.setState({checkedStock: checkedStock})\r\n        }\r\n    }\r\n\r\n    deleteCheckedStock() {\r\n        const {checkedStock, rows} = this.state;\r\n        //Remove all stocks that are found in the checkedStock-list (e.g. remove all the selected rows)\r\n        const newRows = rows.filter((stock) => !checkedStock.includes(stock.name));\r\n        //Empty selected (since they are deleted) and callback the new total calculation since state-setting is async\r\n        this.setState({rows: newRows, checkedStock: []},\r\n            () => this.setState({totalValue: this.getTotalValue()}))\r\n    }\r\n\r\n    addStock(name, amount) {\r\n        const {rows} = this.state;\r\n        if (!rows.map(row => row.name).includes(name)) {\r\n            const newRow = {name: name, value: 5, quantity: amount, total: \"\"};\r\n            newRow.total = newRow.value * amount;\r\n            rows.push(newRow);\r\n            //Sort the rows by name\r\n            rows.sort((a, b) => a.name.localeCompare(b.name) || a.name.localeCompare(b.name));\r\n            this.setState({addStockDialogOpen: false, totalValue: this.getTotalValue()})\r\n        } else {\r\n            alert(\"The stock \" + name + \" already exists!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes, name} = this.props;\r\n        const {addStockDialogOpen, eurosSelected, totalValue} = this.state;\r\n        return (\r\n            <div className={classes.portfolio}>\r\n                <div style={{textAlign: \"right\", height: \"25px\"}}>\r\n                    <IconButton className={classes.deleteButton} aria-label=\"Delete\">\r\n                        <DeleteIcon color=\"secondary\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <Card className={classes.portfolioBase}>\r\n                    <PortfolioHeader\r\n                        classes={classes}\r\n                        name={name}\r\n                        eurosSelected={eurosSelected}\r\n                        changeCurrency={this.changeCurrency}\r\n                    />\r\n                    <div className={classes.tableWrapper}>\r\n                        <PortfolioTable\r\n                            classes={classes}\r\n                            stocks={this.state.rows}\r\n                            checkMarkClick={this.checkMarkClick}\r\n                            currencySymbol={eurosSelected ? \"€\" : \"$\"}\r\n                        />\r\n                    </div>\r\n                    <PortfolioFooter\r\n                        classes={classes}\r\n                        totalValue={totalValue}\r\n                        noCheckedStocks={!this.state.checkedStock.length > 0}\r\n                        deleteCheckedStock={this.deleteCheckedStock}\r\n                        addStock={() => this.setState({addStockDialogOpen: true})}\r\n                        currencySymbol={eurosSelected ? \"€\" : \"$\"}\r\n                    />\r\n                </Card>\r\n                <AddStockDialog\r\n                    portfolioName={name}\r\n                    isOpen={addStockDialogOpen}\r\n                    closeDialog={() => this.setState({addStockDialogOpen: false})}\r\n                    submitStock={this.addStock}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Portfolio);","import React, {Component} from 'react';\nimport './App.css';\nimport Portfolio from \"./Portfolio/Portfolio\";\n\nclass Base extends Component {\n    render() {\n        return (\n            <div className=\"Base\">\n                <Portfolio name={\"Testiportfolio\"}/>\n            </div>\n        );\n    }\n}\n\nexport default Base;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Base is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Base from './Base';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Base />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}